{
  "name": "srebuddy",
  "displayName": "SreBuddy SRE Assistant",
  "description": "AI-powered SRE assistant with advanced LLM integration via GitHub Copilot for automating SRE tasks, generating configurations, and accessing internal documentation via MCP servers",
  "version": "0.1.0",
  "publisher": "your-publisher-name",
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/srebuddy-extension.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/srebuddy-extension/issues"
  },
  "homepage": "https://github.com/your-username/srebuddy-extension#readme",
  "keywords": [
    "sre",
    "site-reliability-engineering",
    "ai-assistant",
    "copilot",
    "automation",
    "devops",
    "monitoring",
    "deployment",
    "infrastructure"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "activationEvents": [
    "onChatParticipant:srebuddy",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "chatParticipants": [
      {
        "id": "srebuddy",
        "name": "SreBuddy",
        "description": "AI-powered SRE assistant for automating SRE tasks and accessing documentation",
        "isSticky": true,
        "commands": [
          {
            "name": "implement",
            "description": "Implement a specific SRE solution or deployment"
          },
          {
            "name": "configure",
            "description": "Generate configuration files for SRE tools"
          },
          {
            "name": "monitor",
            "description": "Set up monitoring and alerting solutions"
          },
          {
            "name": "deploy",
            "description": "Create deployment scripts and configurations"
          },
          {
            "name": "docs",
            "description": "Search and retrieve SRE documentation"
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "srebuddy.configure",
        "title": "Configure SreBuddy MCP Servers",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.implementTask",
        "title": "Implement SRE Task",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.generateConfig",
        "title": "Generate Configuration",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.deploymentPlan",
        "title": "Create Deployment Plan",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.troubleshoot",
        "title": "Troubleshooting Guide",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.monitoring",
        "title": "Setup Monitoring",
        "category": "SreBuddy"
      },
      {
        "command": "srebuddy.setupTemplates",
        "title": "Setup Prompt Templates",
        "category": "SreBuddy"
      }
    ],
    "configuration": {
      "title": "SreBuddy",
      "properties": {
        "srebuddy.mcpServers": {
          "type": "array",
          "default": [
            {
              "name": "filesystem",
              "type": "local",
              "command": "npx",
              "args": ["@modelcontextprotocol/server-filesystem", "/"],
              "description": "Local filesystem access for documentation"
            },
            {
              "name": "github",
              "type": "local",
              "command": "npx",
              "args": ["@modelcontextprotocol/server-github"],
              "env": {
                "GITHUB_PERSONAL_ACCESS_TOKEN": ""
              },
              "description": "GitHub repository access (requires GITHUB_PERSONAL_ACCESS_TOKEN)"
            },
            {
              "name": "brave-search",
              "type": "local",
              "command": "npx",
              "args": ["@modelcontextprotocol/server-brave-search"],
              "env": {
                "BRAVE_API_KEY": ""
              },
              "description": "Brave Search API access (requires BRAVE_API_KEY)"
            }
          ],
          "description": "List of MCP server configurations for accessing internal documentation",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the MCP server"
              },
              "type": {
                "type": "string",
                "enum": ["local", "remote"],
                "default": "local",
                "description": "Type of MCP server (local uses npx command, remote uses URL)"
              },
              "command": {
                "type": "string",
                "description": "Command to run for local servers (e.g., npx)"
              },
              "args": {
                "type": "array",
                "items": {"type": "string"},
                "description": "Arguments for the local command"
              },
              "url": {
                "type": "string",
                "description": "URL of the remote MCP server"
              },
              "apiKey": {
                "type": "string",
                "description": "API key for authentication (remote servers)"
              },
              "env": {
                "type": "object",
                "description": "Environment variables for local servers"
              },
              "description": {
                "type": "string",
                "description": "Description of what this server provides"
              }
            },
            "required": ["name", "type"],
            "anyOf": [
              {
                "properties": {"type": {"const": "local"}},
                "required": ["command", "args"]
              },
              {
                "properties": {"type": {"const": "remote"}},
                "required": ["url"]
              }
            ]
          }
        },
        "srebuddy.enableLogging": {
          "type": "boolean",
          "default": false,
          "description": "Enable detailed logging for debugging"
        },
        "srebuddy.agentMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable Agent mode commands in Command Palette"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish",
    "ovsx:publish": "ovsx publish"
  },
  "devDependencies": {
    "@types/axios": "^0.9.36",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "ovsx": "^0.10.4",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.13.2",
    "axios": "^1.10.0"
  }
}
